<UserControl x:Class="HotelManagement.Views.RoomsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             FontFamily="/Resources/GothamLight.otf#Gotham Light"
             FontSize="15"
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:local="clr-namespace:HotelManagement.Views"
             xmlns:viewModels="clr-namespace:HotelManagement.ViewModels">

    <Grid>
        <TabControl Margin="0">
            <TabItem Header="View Rooms">
                <Border Grid.Row="0" Margin="20">
                    <DataGrid AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="True" SelectionMode="Single" SelectionUnit="FullRow" ItemsSource="{Binding Rooms}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding RoomID}" Header="Room ID" />
                            <DataGridTextColumn Binding="{Binding RoomNumber}" Header="Room Number" />
                            <DataGridTextColumn Binding="{Binding Floor}" Header="Floor" />
                            <DataGridTextColumn Binding="{Binding RoomTypeName}" Header="Room Type" />
                            
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </TabItem>

            <TabItem Header="Add Room">
                <StackPanel Margin="20">

                    <TextBox x:Name="RoomNumberTextBox" Width="200" Foreground="{DynamicResource TextBrush}" Margin="15"
                             materialDesign:HintAssist.HelperText="Room number must not be empty"
                             materialDesign:HintAssist.Hint="Room Number"
                             Text="{Binding RoomNumber, UpdateSourceTrigger=PropertyChanged}" />

                    <ComboBox x:Name="FloorComboBox" Width="200" Foreground="{DynamicResource TextBrush}" Margin="15"
                            materialDesign:HintAssist.HelperText="Select a floor"
                            materialDesign:HintAssist.Hint="Floor"
                            SelectedItem="{Binding Floor, UpdateSourceTrigger=PropertyChanged}"
                            ItemsSource="{Binding Floors}">
                    </ComboBox>


                    <ComboBox x:Name="RoomTypeComboBox" 
                        Width="200" 
                        Foreground="{DynamicResource TextBrush}" 
                        Margin="15"
                        materialDesign:HintAssist.HelperText="Select a room type"
                        materialDesign:HintAssist.Hint="Room Type"
                        SelectedItem="{Binding SelectedRoomType, UpdateSourceTrigger=PropertyChanged}"
                        ItemsSource="{Binding RoomTypes}"
                        DisplayMemberPath="Name">
                    </ComboBox>

                    <Button
                        Width="100"
                        Content="Add"
                        Margin="20"
                        Command="{Binding AddRoomCommand}"
                        Style="{StaticResource MaterialDesignFlatSecondaryDarkBgButton}" 
                        ToolTip="Add Room" />

                </StackPanel>
            </TabItem>

            <TabItem Header="Edit Rooms">
                <Border Grid.Row="0" Margin="20">
                    <DataGrid AutoGenerateColumns="False" CanUserAddRows="False" IsReadOnly="False" SelectionMode="Single" SelectionUnit="FullRow" ItemsSource="{Binding Rooms}" >

                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding RoomID}" Header="Room ID" IsReadOnly="True" />
                            <DataGridTextColumn Binding="{Binding RoomNumber}" Header="Room Number" />
                            <DataGridTextColumn Binding="{Binding Floor}" Header="Floor" />
                            <DataGridTextColumn Binding="{Binding RoomTypeName}" Header="Room Type" IsReadOnly="True"/>

                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Command="{Binding DataContext.DeleteRoomCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                            CommandParameter="{Binding}" 
                                            Style="{StaticResource MaterialDesignFlatButton}"
                                            ToolTip="Delete Room" Height="20"
                                            Foreground="#C70000"
                                            Margin="0" Padding="0">
                                            <Button.Content>
                                                <materialDesign:PackIcon Kind="Delete" Width="16" Height="16" />
                                            </Button.Content>
                                        </Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </Border>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>